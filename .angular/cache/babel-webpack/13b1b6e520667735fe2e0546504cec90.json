{"ast":null,"code":"/*\r\n * Author: Alex Haefner\r\n * Date: Dec 7, 2021\r\n * Descripton: TS file for Home\r\n *  https://stackblitz.com/run?file=src%2Fapp%2Fname-editor%2Fname-editor.component.html\r\n */\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nlet HomeComponent = class HomeComponent {\n  constructor(http, fb, snackBar) {\n    this.http = http;\n    this.fb = fb;\n    this.snackBar = snackBar;\n    this.codeForm = new FormGroup({\n      code: new FormControl()\n    }); //code = new FormControl('');\n\n    this.codes = new MatTableDataSource([]);\n    this.displayedColumns = ['code'];\n  }\n  /*\r\n   * Method to retrieve codes with API call\r\n   */\n\n\n  fetchCodes() {\n    this.http.get('http://localhost:3000/api/codes').subscribe(res => {\n      this.codes.data = res;\n      console.log(this.codes.data);\n    });\n  }\n\n  ngOnInit() {\n    this.fetchCodes();\n    this.codeForm = this.fb.group({\n      code: [null, Validators.compose([Validators.required, Validators.pattern('^\\\\d{12}$') //Allows for only 12 digits\n      ])]\n    });\n  }\n\n  submitCode() {\n    const codeInput = this.codeForm.value;\n    this.http.post('http://localhost:3000/api/codes', {\n      code: codeInput.code\n    }).subscribe(res => {\n      alert('code success');\n      window.location.reload(); // Will update to async pipe later\n    });\n  }\n\n  showSnackbar(content, action, duration) {\n    this.snackBar.open(content, action, {\n      duration: 1000,\n      verticalPosition: 'top',\n      horizontalPosition: 'center' // Allowed values are 'start' | 'center' | 'end' | 'left' | 'right'\n\n    });\n  }\n\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"sources":["C:/Users/alexh/OneDrive/Documents/GitHub/friend-code-finder/src/app/home/home.component.ts"],"names":["__decorate","Component","MatTableDataSource","FormGroup","FormControl","Validators","HomeComponent","constructor","http","fb","snackBar","codeForm","code","codes","displayedColumns","fetchCodes","get","subscribe","res","data","console","log","ngOnInit","group","compose","required","pattern","submitCode","codeInput","value","post","alert","window","location","reload","showSnackbar","content","action","duration","open","verticalPosition","horizontalPosition","selector","templateUrl","styleUrls"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,UAAjC,QAAoD,gBAApD;AACA,IAAIC,aAAa,GAAG,MAAMA,aAAN,CAAoB;AACpCC,EAAAA,WAAW,CAACC,IAAD,EAAOC,EAAP,EAAWC,QAAX,EAAqB;AAC5B,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKC,EAAL,GAAUA,EAAV;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,QAAL,GAAgB,IAAIR,SAAJ,CAAc;AAC1BS,MAAAA,IAAI,EAAE,IAAIR,WAAJ;AADoB,KAAd,CAAhB,CAJ4B,CAO5B;;AACA,SAAKS,KAAL,GAAa,IAAIX,kBAAJ,CAAuB,EAAvB,CAAb;AACA,SAAKY,gBAAL,GAAwB,CAAC,MAAD,CAAxB;AACH;AACD;AACJ;AACA;;;AACIC,EAAAA,UAAU,GAAG;AACT,SAAKP,IAAL,CACKQ,GADL,CACS,iCADT,EAEKC,SAFL,CAEgBC,GAAD,IAAS;AACpB,WAAKL,KAAL,CAAWM,IAAX,GAAkBD,GAAlB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWM,IAAvB;AACH,KALD;AAMH;;AACDG,EAAAA,QAAQ,GAAG;AACP,SAAKP,UAAL;AACA,SAAKJ,QAAL,GAAgB,KAAKF,EAAL,CAAQc,KAAR,CAAc;AAC1BX,MAAAA,IAAI,EAAE,CACF,IADE,EAEFP,UAAU,CAACmB,OAAX,CAAmB,CACfnB,UAAU,CAACoB,QADI,EAEfpB,UAAU,CAACqB,OAAX,CAAmB,WAAnB,CAFe,CAEkB;AAFlB,OAAnB,CAFE;AADoB,KAAd,CAAhB;AASH;;AACDC,EAAAA,UAAU,GAAG;AACT,UAAMC,SAAS,GAAG,KAAKjB,QAAL,CAAckB,KAAhC;AACA,SAAKrB,IAAL,CACKsB,IADL,CACU,iCADV,EAC6C;AACzClB,MAAAA,IAAI,EAAEgB,SAAS,CAAChB;AADyB,KAD7C,EAIKK,SAJL,CAIgBC,GAAD,IAAS;AACpBa,MAAAA,KAAK,CAAC,cAAD,CAAL;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAFoB,CAEM;AAC7B,KAPD;AAQH;;AACDC,EAAAA,YAAY,CAACC,OAAD,EAAUC,MAAV,EAAkBC,QAAlB,EAA4B;AACpC,SAAK5B,QAAL,CAAc6B,IAAd,CAAmBH,OAAnB,EAA4BC,MAA5B,EAAoC;AAChCC,MAAAA,QAAQ,EAAE,IADsB;AAEhCE,MAAAA,gBAAgB,EAAE,KAFc;AAGhCC,MAAAA,kBAAkB,EAAE,QAHY,CAGF;;AAHE,KAApC;AAKH;;AApDmC,CAAxC;AAsDAnC,aAAa,GAAGN,UAAU,CAAC,CACvBC,SAAS,CAAC;AACNyC,EAAAA,QAAQ,EAAE,UADJ;AAENC,EAAAA,WAAW,EAAE,uBAFP;AAGNC,EAAAA,SAAS,EAAE,CAAC,sBAAD;AAHL,CAAD,CADc,CAAD,EAMvBtC,aANuB,CAA1B;AAOA,SAASA,aAAT","sourcesContent":["/*\r\n * Author: Alex Haefner\r\n * Date: Dec 7, 2021\r\n * Descripton: TS file for Home\r\n *  https://stackblitz.com/run?file=src%2Fapp%2Fname-editor%2Fname-editor.component.html\r\n */\r\nimport { __decorate } from \"tslib\";\r\nimport { Component } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormGroup, FormControl, Validators, } from '@angular/forms';\r\nlet HomeComponent = class HomeComponent {\r\n    constructor(http, fb, snackBar) {\r\n        this.http = http;\r\n        this.fb = fb;\r\n        this.snackBar = snackBar;\r\n        this.codeForm = new FormGroup({\r\n            code: new FormControl(),\r\n        });\r\n        //code = new FormControl('');\r\n        this.codes = new MatTableDataSource([]);\r\n        this.displayedColumns = ['code'];\r\n    }\r\n    /*\r\n     * Method to retrieve codes with API call\r\n     */\r\n    fetchCodes() {\r\n        this.http\r\n            .get('http://localhost:3000/api/codes')\r\n            .subscribe((res) => {\r\n            this.codes.data = res;\r\n            console.log(this.codes.data);\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        this.fetchCodes();\r\n        this.codeForm = this.fb.group({\r\n            code: [\r\n                null,\r\n                Validators.compose([\r\n                    Validators.required,\r\n                    Validators.pattern('^\\\\d{12}$'), //Allows for only 12 digits\r\n                ]),\r\n            ],\r\n        });\r\n    }\r\n    submitCode() {\r\n        const codeInput = this.codeForm.value;\r\n        this.http\r\n            .post('http://localhost:3000/api/codes', {\r\n            code: codeInput.code,\r\n        })\r\n            .subscribe((res) => {\r\n            alert('code success');\r\n            window.location.reload(); // Will update to async pipe later\r\n        });\r\n    }\r\n    showSnackbar(content, action, duration) {\r\n        this.snackBar.open(content, action, {\r\n            duration: 1000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'center', // Allowed values are 'start' | 'center' | 'end' | 'left' | 'right'\r\n        });\r\n    }\r\n};\r\nHomeComponent = __decorate([\r\n    Component({\r\n        selector: 'app-home',\r\n        templateUrl: './home.component.html',\r\n        styleUrls: ['./home.component.css'],\r\n    })\r\n], HomeComponent);\r\nexport { HomeComponent };\r\n"]},"metadata":{},"sourceType":"module"}